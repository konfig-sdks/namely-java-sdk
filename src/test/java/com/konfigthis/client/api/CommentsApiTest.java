/*
 * Namely API
 * Move your app forward with the Namely API Move your app forward with the Namely API
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateComment;
import com.konfigthis.client.model.CreateCommentPayload;
import com.konfigthis.client.model.HomeFeedCreateEventCommentResponse;
import com.konfigthis.client.model.HomeFeedGetEventCommentsResponse;
import com.konfigthis.client.model.HomeFeedRemoveEventCommentResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommentsApi
 */
@Disabled
public class CommentsApiTest {

    private static CommentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CommentsApi(apiClient);
    }

    /**
     * Create an Event&#39;s Comment
     *
     * Creates a comment on a particular event.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEventCommentTest() throws ApiException {
        List<CreateCommentPayload> comments = null;
        String id = null;
        HomeFeedCreateEventCommentResponse response = api.createEventComment(comments, id)
                .execute();
        // TODO: test validations
    }

    /**
     * Get an Event&#39;s Comments
     *
     * Returns all comments associated with a particular event.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventCommentsTest() throws ApiException {
        String eventId = null;
        HomeFeedGetEventCommentsResponse response = api.getEventComments(eventId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete an Event&#39;s Comment
     *
     * Delete a particular comment on an event.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeEventCommentTest() throws ApiException {
        String eventId = null;
        String commentId = null;
        HomeFeedRemoveEventCommentResponse response = api.removeEventComment(eventId, commentId)
                .execute();
        // TODO: test validations
    }

}
