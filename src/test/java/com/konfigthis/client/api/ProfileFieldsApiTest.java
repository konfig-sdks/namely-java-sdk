/*
 * Namely API
 * Move your app forward with the Namely API Move your app forward with the Namely API
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateProfileField;
import com.konfigthis.client.model.CreateProfileFieldPayload;
import com.konfigthis.client.model.ProfileFieldsCreateProfileFieldResponse;
import com.konfigthis.client.model.ProfileFieldsGetAllFieldSectionsResponse;
import com.konfigthis.client.model.ProfileFieldsGetAllFieldsResponse;
import com.konfigthis.client.model.ProfileFieldsGetFieldInformationResponse;
import com.konfigthis.client.model.ProfileFieldsGetFieldSectionResponse;
import com.konfigthis.client.model.ProfileFieldsUpdateFieldInSection200Response;
import com.konfigthis.client.model.ProfileFieldsUpdateFieldInSectionResponse;
import com.konfigthis.client.model.UpdateProfileField;
import com.konfigthis.client.model.UpdateProfileFieldPayload;
import com.konfigthis.client.model.UpdateSection;
import com.konfigthis.client.model.UpdateSectionPayload;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProfileFieldsApi
 */
@Disabled
public class ProfileFieldsApiTest {

    private static ProfileFieldsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ProfileFieldsApi(apiClient);
    }

    /**
     * Create a Profile Field
     *
     * Creates a profile field within a profile field section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProfileFieldTest() throws ApiException {
        List<CreateProfileFieldPayload> fields = null;
        ProfileFieldsCreateProfileFieldResponse response = api.createProfileField(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all Profile Field Sections
     *
     * Returns all profiles field sections as configured at your company. Linked to this endpoint is a list of profile fields, including additional fields not necessarily included in the #endpoint:2PMjgBj4iCTtp4tJe endpoint, as not all are API transferrable.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllFieldSectionsTest() throws ApiException {
        ProfileFieldsGetAllFieldSectionsResponse response = api.getAllFieldSections()
                .execute();
        // TODO: test validations
    }

    /**
     * Get all Profile Fields
     *
     * Returns all profiles fields as configured at your company with instructions on valid format for passing through the API. This includes custom fields, but exceptions can be found on the #endpoint:K6iFb2x6z2yTM9jev page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllFieldsTest() throws ApiException {
        ProfileFieldsGetAllFieldsResponse response = api.getAllFields()
                .execute();
        // TODO: test validations
    }

    /**
     * Get a Profile Field
     *
     * Returns information about a single Profile Field.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFieldInformationTest() throws ApiException {
        String id = null;
        ProfileFieldsGetFieldInformationResponse response = api.getFieldInformation(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a Profile Field Section
     *
     * Returns information about a single Profile Field Section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFieldSectionTest() throws ApiException {
        String id = null;
        ProfileFieldsGetFieldSectionResponse response = api.getFieldSection(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a Profile Field
     *
     * Updates a profile field within a profile field section. Supports changing the label and the profile field section in which it sits.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFieldInSectionTest() throws ApiException {
        List<UpdateProfileFieldPayload> fields = null;
        String id = null;
        ProfileFieldsUpdateFieldInSectionResponse response = api.updateFieldInSection(fields, id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a Profile Field Section
     *
     * Updates the name/label of a profile field section.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFieldInSection_0Test() throws ApiException {
        List<UpdateSectionPayload> sections = null;
        String id = null;
        ProfileFieldsUpdateFieldInSection200Response response = api.updateFieldInSection_0(sections, id)
                .execute();
        // TODO: test validations
    }

}
