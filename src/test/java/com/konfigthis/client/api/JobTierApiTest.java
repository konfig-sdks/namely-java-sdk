/*
 * Namely API
 * Move your app forward with the Namely API Move your app forward with the Namely API
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateJobTier;
import com.konfigthis.client.model.CreateJobTierPayload;
import com.konfigthis.client.model.JobsInfoCreateJobTierResponse;
import com.konfigthis.client.model.JobsInfoGetAllJobTiersResponse;
import com.konfigthis.client.model.JobsInfoGetJobTierResponse;
import com.konfigthis.client.model.JobsInfoUpdateLabelResponse;
import com.konfigthis.client.model.UpdateJobTier;
import com.konfigthis.client.model.UpdateJobTierPayload;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobTierApi
 */
@Disabled
public class JobTierApiTest {

    private static JobTierApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new JobTierApi(apiClient);
    }

    /**
     * Create a Job Tier
     *
     * Creates a job tier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createJobTierTest() throws ApiException {
        List<CreateJobTierPayload> jobTiers = null;
        JobsInfoCreateJobTierResponse response = api.createJobTier(jobTiers)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all Job Tiers
     *
     * Returns an array of all job tiers. Each job tier can have zero to many linked job titles (while each job title must have one and only one linked job tier).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllJobTiersTest() throws ApiException {
        JobsInfoGetAllJobTiersResponse response = api.getAllJobTiers()
                .execute();
        // TODO: test validations
    }

    /**
     * Get a Job Tier
     *
     * Returns information about a single job tier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJobTierTest() throws ApiException {
        String id = null;
        JobsInfoGetJobTierResponse response = api.getJobTier(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a Job Tier
     *
     * Updates the label of a job tier.  Use the #endpoint:3iHo6fSyKNs2dsaSC endpoint to get a list of job tiers, whose &lt;code&gt;id&lt;/code&gt; is used in the path parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelTest() throws ApiException {
        List<UpdateJobTierPayload> jobTiers = null;
        String id = null;
        JobsInfoUpdateLabelResponse response = api.updateLabel(jobTiers, id)
                .execute();
        // TODO: test validations
    }

}
